{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://armosec.io",
          "name": "kubescape",
          "rules": [
            {
              "id": "C-0034",
              "shortDescription": {
                "text": "Automatic mapping of service account"
              },
              "fullDescription": {
                "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Disable automatic mounting of service account tokens to PODs either at the service account level or at the individual POD level, by specifying the automountServiceAccountToken: false. Note that POD level takes precedence."
              }
            },
            {
              "id": "C-0061",
              "shortDescription": {
                "text": "Pods in default namespace"
              },
              "fullDescription": {
                "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Create necessary namespaces and move all the PODs from default namespace there."
              }
            },
            {
              "id": "C-0013",
              "shortDescription": {
                "text": "Non-root containers"
              },
              "fullDescription": {
                "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: If your application does not need root privileges, make sure to define the runAsUser or runAsGroup under the PodSecurityContext and use user ID 1000 or higher. Do not turn on allowPrivlegeEscalation bit and make sure runAsNonRoot is true."
              }
            },
            {
              "id": "C-0018",
              "shortDescription": {
                "text": "Configured readiness probe"
              },
              "fullDescription": {
                "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Ensure Readiness probes are configured wherever possible."
              }
            },
            {
              "id": "C-0073",
              "shortDescription": {
                "text": "Naked PODs"
              },
              "fullDescription": {
                "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Create necessary Deployment object for every POD making any POD a first class citizen in your IaC architecture."
              }
            },
            {
              "id": "C-0017",
              "shortDescription": {
                "text": "Immutable container filesystem"
              },
              "fullDescription": {
                "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Set the filesystem of the container to read-only when possible (POD securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access."
              }
            },
            {
              "id": "C-0077",
              "shortDescription": {
                "text": "K8s common labels usage"
              },
              "fullDescription": {
                "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Define applicable labels or use the exception mechanism to prevent further notifications."
              }
            },
            {
              "id": "C-0004",
              "shortDescription": {
                "text": "Resources memory limit and request"
              },
              "fullDescription": {
                "text": "This control identifies all Pods for which the memory limit is not set."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Set the memory limit or use exception mechanism to avoid unnecessary notifications."
              }
            },
            {
              "id": "C-0030",
              "shortDescription": {
                "text": "Ingress and Egress blocked"
              },
              "fullDescription": {
                "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Define a network policy that restricts ingress and egress connections."
              }
            },
            {
              "id": "C-0016",
              "shortDescription": {
                "text": "Allow privilege escalation"
              },
              "fullDescription": {
                "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false."
              }
            },
            {
              "id": "C-0056",
              "shortDescription": {
                "text": "Configured liveness probe"
              },
              "fullDescription": {
                "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Ensure Liveness probes are configured wherever possible."
              }
            },
            {
              "id": "C-0050",
              "shortDescription": {
                "text": "Resources CPU limit and request"
              },
              "fullDescription": {
                "text": "This control identifies all Pods for which the CPU limit is not set."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Set the CPU limit or use exception mechanism to avoid unnecessary notifications."
              }
            },
            {
              "id": "C-0009",
              "shortDescription": {
                "text": "Resource limits"
              },
              "fullDescription": {
                "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Define LimitRange and Resource Limits in the namespace or in the deployment/POD yamls."
              }
            },
            {
              "id": "C-0055",
              "shortDescription": {
                "text": "Linux hardening"
              },
              "fullDescription": {
                "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges."
              }
            },
            {
              "id": "C-0076",
              "shortDescription": {
                "text": "Label usage for resources"
              },
              "fullDescription": {
                "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Define labels that are most suitable to your needs of use the exceptions to prevent further notifications."
              }
            },
            {
              "id": "C-0012",
              "shortDescription": {
                "text": "Applications credentials in configuration files"
              },
              "fullDescription": {
                "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Use Kubernetes secrets or Key Management Systems to store credentials."
              }
            },
            {
              "id": "C-0075",
              "shortDescription": {
                "text": "Image pull policy on latest tag"
              },
              "fullDescription": {
                "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Set ImagePullPolicy to Always in all PODs found by this control."
              }
            },
            {
              "id": "C-0041",
              "shortDescription": {
                "text": "HostNetwork access"
              },
              "fullDescription": {
                "text": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Only connect PODs to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those PODs that must have access to host network by design."
              }
            },
            {
              "id": "C-0048",
              "shortDescription": {
                "text": "HostPath mount"
              },
              "fullDescription": {
                "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Remove hostPath mounts unless they are absolutely necessary and use exception mechanism to remove notifications."
              }
            },
            {
              "id": "C-0045",
              "shortDescription": {
                "text": "Writable hostPath mount"
              },
              "fullDescription": {
                "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Refrain from using the hostPath mount or use the exception mechanism to remove unnecessary notifications."
              }
            },
            {
              "id": "C-0038",
              "shortDescription": {
                "text": "Host PID/IPC privileges"
              },
              "fullDescription": {
                "text": "Containers should be isolated from the host machine as much as possible. The hostPID and hostIPC fields in deployment yaml may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions. This control identifies all PODs using hostPID or hostIPC privileges."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Remove hostPID and hostIPC from the yaml file(s) privileges unless they are absolutely necessary."
              }
            },
            {
              "id": "C-0044",
              "shortDescription": {
                "text": "Container hostPort"
              },
              "fullDescription": {
                "text": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead."
              }
            },
            {
              "id": "C-0057",
              "shortDescription": {
                "text": "Privileged container"
              },
              "fullDescription": {
                "text": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications."
              }
            },
            {
              "id": "C-0054",
              "shortDescription": {
                "text": "Cluster internal networking"
              },
              "fullDescription": {
                "text": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Remediation: Define Kubernetes network policies or use alternative products to protect cluster network."
              }
            },
            {
              "id": "C-0049",
              "shortDescription": {
                "text": "Network mapping"
              },
              "fullDescription": {
                "text": "If no network policy is defined, attackers who gain access to a single container may use it to probe the network. This control lists all namespaces in which no network policies are defined."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Remediation: Define network policies or use similar network protection mechanisms."
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/rate-card-updater.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/deploy.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-manager.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/public-api.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-serviceaccount-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0610.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/job/init-db.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/history.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2103.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfighvp2303addon.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/core.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/serviceaccount/component-management.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2107.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/upgrade-crds.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2303.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/cost.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/tests/canary-pod.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/hive-cli-tool.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-job.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/tests/gateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/install.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/tool.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/container.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "zookeeper/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/autoscaling.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0041",
          "ruleIndex": 17,
          "message": {
            "text": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0045",
          "ruleIndex": 19,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smarter-device-manager/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/target-control.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/roles/ServiceAccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-connector/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0640.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/db-init.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/component-management.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/set-estimated-cost.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kube-state-metrics/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/charts/kube-state-metrics/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/api-gateway.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/injector-deployment.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0041",
          "ruleIndex": 17,
          "message": {
            "text": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0038",
          "ruleIndex": 20,
          "message": {
            "text": "Containers should be isolated from the host machine as much as possible. The hostPID and hostIPC fields in deployment yaml may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions. This control identifies all PODs using hostPID or hostIPC privileges."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0044",
          "ruleIndex": 21,
          "message": {
            "text": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/daemonset.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "portal/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-handler.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/ui.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/node-exporter/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "postgresql/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault-secrets-webhook/templates/webhook-rbac.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2206.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/core.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/install.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "oauth2-proxy/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0620.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/startupapicheck-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-monitoring.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/server/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/init-db.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/service_account.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/cost.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0041",
          "ruleIndex": 17,
          "message": {
            "text": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tigera-operator/templates/tigera-operator/02-tigera-operator.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2209.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/logs-signer-configuration.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/tests/ui.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0041",
          "ruleIndex": 17,
          "message": {
            "text": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0057",
          "ruleIndex": 22,
          "message": {
            "text": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0045",
          "ruleIndex": 19,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/node-daemonset.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/3ptool.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0045",
          "ruleIndex": 19,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/restic-daemonset.yaml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0630.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0075",
          "ruleIndex": 16,
          "message": {
            "text": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "kafka/templates/statefulset.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-master-statefulset.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/reservation.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0048",
          "ruleIndex": 18,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0045",
          "ruleIndex": 19,
          "message": {
            "text": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/daemonset.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/webhook-deployment.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0057",
          "ruleIndex": 22,
          "message": {
            "text": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "aws-efs-csi-driver/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/project.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-private-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/sync.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/jobs/init-db.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signing-proxy/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/jobs/pre-install.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2203.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/virtual-target.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "networking-flow-logs/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/gateway.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "minio/templates/post-install-create-user-job.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/tp-tool-installer.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/artifact.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-discovery/templates/istiod-injector-configmap.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/roles/ServiceAccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cert-manager/templates/cainjector-serviceaccount.yaml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/wrlsvc.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/apigateway.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/gateway.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "logs-signer/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base/templates/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smtp/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hive-app/templates/deployments/ssh-portal.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/repository.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/hooks/pre-delete.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-ui/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-ui/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-ui/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-ui/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-ui/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/install.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/policy.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gitlab-runner/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "wrlinux-ota/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0012",
          "ruleIndex": 15,
          "message": {
            "text": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/deployments/build.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gallery/templates/deployments/media.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0541.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fluent-bit/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "redis/templates/redis-slave-statefulset.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0054",
          "ruleIndex": 23,
          "message": {
            "text": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/namespace.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0049",
          "ruleIndex": 24,
          "message": {
            "text": "If no network policy is defined, attackers who gain access to a single container may use it to probe the network. This control lists all namespaces in which no network policies are defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "istio-operator/templates/namespace.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/deployment/ui.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/serviceaccount/componentInstaller.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0660.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 6
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lxbs/templates/tests/apigateway.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/tests/server-test.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ingress-nginx/templates/controller-deployment.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfig2111.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vxbs/templates/deployments/vxconfigsr0650.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/deploy.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/pushgateway/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0077",
          "ruleIndex": 6,
          "message": {
            "text": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mcp/templates/cronjobs/cost-history.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "prometheus/templates/alertmanager/serviceaccount.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0073",
          "ruleIndex": 4,
          "message": {
            "text": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "grafana/templates/tests/test.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault/templates/server-statefulset.yaml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0061",
          "ruleIndex": 1,
          "message": {
            "text": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0013",
          "ruleIndex": 2,
          "message": {
            "text": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0018",
          "ruleIndex": 3,
          "message": {
            "text": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0017",
          "ruleIndex": 5,
          "message": {
            "text": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0004",
          "ruleIndex": 7,
          "message": {
            "text": "This control identifies all Pods for which the memory limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0030",
          "ruleIndex": 8,
          "message": {
            "text": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0076",
          "ruleIndex": 14,
          "message": {
            "text": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0016",
          "ruleIndex": 9,
          "message": {
            "text": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0056",
          "ruleIndex": 10,
          "message": {
            "text": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0050",
          "ruleIndex": 11,
          "message": {
            "text": "This control identifies all Pods for which the CPU limit is not set."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0009",
          "ruleIndex": 12,
          "message": {
            "text": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0055",
          "ruleIndex": 13,
          "message": {
            "text": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "usp-gateway/templates/deployment.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C-0034",
          "ruleIndex": 0,
          "message": {
            "text": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "velero/templates/serviceaccount-server.yaml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1
                }
              }
            }
          ]
        }
      ]
    }
  ]
}